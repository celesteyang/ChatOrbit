basePath: /
definitions:
  main.ChangePasswordRequest:
    properties:
      new_password:
        minLength: 6
        type: string
      old_password:
        minLength: 6
        type: string
    required:
    - new_password
    - old_password
    type: object
  main.LoginRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  main.RegisterRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        maxLength: 100
        minLength: 2
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is the authentication service for ChatOrbit.
  title: Auth Service API
  version: "1.0"
paths:
  /change-password:
    post:
      consumes:
      - application/json
      description: Change the password of the logged-in user
      parameters:
      - description: Change Password request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.ChangePasswordRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Change Password
      tags:
      - ChangePassword
  /login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: Login request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login
      tags:
      - Login
  /logout:
    post:
      consumes:
      - application/json
      description: Logout the user by clearing the JWT cookie
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Logout
      tags:
      - Logout
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, username, and password
      parameters:
      - description: Register request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/main.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Register
  /test:
    get:
      consumes:
      - application/json
      description: This endpoint is used to test if the service is up
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Test the auth service
      tags:
      - Health
schemes:
- http
swagger: "2.0"
